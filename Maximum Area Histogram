#include <bits/stdc++.h>
using namespace std;

int main(){
 
 int n;
 cin >> n;
 
 int ar[n];
 for(int i=0;i<n;i++) cin >> ar[i];

    vector<int> v,right,left;
    stack<int> s;

    for(int i=0;i<n;i++){
        if(s.empty()){
            left.push_back(-1);
        }
        else if(!s.empty() && ar[s.top()] >= ar[i]){
            // curr i will be min for rest right iterations
            while(!s.empty() && ar[s.top()] >= ar[i]){
                s.pop();
            }
            if(s.size() == 0){
                left.push_back(-1);
            }
            else{
                left.push_back(s.top());
            }
        }
        else if(!s.empty() && ar[s.top()] < ar[i]){
            left.push_back(s.top());
        }
      s.push(i);  
    }
    
    stack<int> s1;

    for(int i=n-1;i>=0;i--){
        if(s1.empty()){
            right.push_back(n);
        }
        else if(!s1.empty() && ar[s1.top()] >= ar[i]){
            while(!s1.empty() && ar[s1.top()] >= ar[i]){
                s1.pop();
            }
            if(s1.empty()) right.push_back(n);
            else right.push_back(s1.top());
        }
        else if(!s1.empty() && ar[s1.top()] < ar[i]){
            right.push_back(s1.top());
        }
       s1.push(i); 
    }

  reverse(right.begin(),right.end());

  int width[n];
  for(int i=0;i<n;i++) width[i] = (right[i] - left[i] - 1) * ar[i];

  cout << *max_element(width,width+n) << endl;

  return 0;  
}
